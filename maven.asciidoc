= aucampia / notes / maven


* Plugin Help
+
----
mvn help:describe -Dplugin=dependency -Dfull
mvn help:describe -Dplugin=maven-dependency-plugin -Dfull
mvn help:describe -Dplugin=org.apache.maven.plugins:maven-dependency-plugin:2.8 -Dfull
mvn help:describe -Dplugin=compiler 
mvn help:describe -Dcmd=compile -Dfull
----

* Dependency Tree ...
+
----
mvn dependency:tree
mvn org.apache.maven.plugins:maven-dependency-plugin:2.8:tree
----

* Built In Plugins ...
+
site:http://maven.apache.org/plugins/[ Available Plugins ]

* Activate `-Xlink:all`

----
# phases

https://maven.apache.org/ref/3.2.3/maven-core/lifecycles.html

----


----
-DskipTests
mvn -DskipTests -X -e install >out 2>&1
mvn -DskipTests -X -e install 2>&1 | view -
mvn -DskipTests install
----

----
[ERROR] Unknown lifecycle phase "xjc". You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>. Available lifecycle phases are: validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy, pre-clean, clean, post-clean, pre-site, site, post-site, site-deploy. -> [Help 1]
----

----
mvn-3.0 -Djava.util.logging.config.file=$HOME/.m2/logging.properties install
----

----
mvn help:describe -Dplugin=versions -Dfull
mvn versions:display-plugin-updates
mvn help:describe -Dplugin=wagon -Dfull
mvn versions:update-child-modules
----

----
mvn help:effective-pom 
mvn-3.0 help:effective-pom -Doutput=effective-pom.xml
----

----
https://maven.apache.org/guides/mini/guide-encryption.html
----

----

----

----
## DONT HAVE ${MAVEN_HOME} SET
## DONT HAVE ${M2_HOME} SET
maven_version=3.0.5
maven_version=3.2.3
maven_version=3.1.1

mkdir -p ~/software/sources/apache.org/maven/
mkdir -p ~/software/installations/
( cd ~/software/sources/apache.org/maven/ && wget -c http://apache.mirror.ac.za/maven/maven-${maven_version%%.*}/${maven_version}/binaries/apache-maven-${maven_version}-bin.zip )

rm -r ~/software/installations/apache-maven-${maven_version}
unzip ~/software/sources/apache.org/maven/apache-maven-${maven_version}-bin.zip -d ~/software/installations/
rm ~/software/installations/apache-maven
ln -s ~/software/installations/apache-maven-${maven_version} ~/software/installations/apache-maven

mkdir -p ~/.local/bin/
ln -s ~/software/installations/apache-maven/bin/mvn ~/.local/bin/mvn
ln -s ~/software/installations/apache-maven/bin/mvnDebug ~/.local/bin/mvnDebug
----

----
mvn --encrypt-master-password ... | sed -e '1i<settingsSecurity>' -e 's,.*,\t<master>&</master>,g' -e '$a</settingsSecurity>' > ~/.m2/settings-security.xml
mvn --encrypt-password ...
----

----
    <scm>
        <connection>scm:git:git@gitlab.com:concurrent-systems-pcc/ssim-api.git</connection>
        <developerConnection>scm:git@gitlab.com:concurrent-systems-pcc/ssim-api.git</developerConnection>
        <url>https://gitlab.com/concurrent-systems-pcc/ssim-api</url>
    </scm>

    <distributionManagement>
        <repository>
            <id>ssh-warehouse.concurrent.co.za-teams-pasterisk</id>
            <url>scp://warehouse.concurrent.co.za/var/opt/webdav/warehouse.concurrent.co.za/teams/pasterisk/maven/</url>
            <layout>default</layout>
        </repository>
    </distributionManagement>
----

----
mvn scm:validate
----


----
https://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github
https://bintray.com/
----

----
https://repository.apache.org/content/repositories/snapshots
https://repository.apache.org/content/repositories/snapshots/org/apache/httpcomponents/httpclient-osgi/4.3.6-SNAPSHOT/
----


----
## https://maven.apache.org/maven-release/maven-release-plugin/
## https://maven.apache.org/maven-release/maven-release-plugin/
mvn -DdryRun=true release:prepare
mvn -DdryRun=true release:prepare-with-pom
mvn -DdryRun=true release:prepare-with-pom

mvn release:prepare
mvn release:prepare-with-pom

4.3.5

mvn release:perform
mvn -DdryRun=true release:perform

mvn scm:tag
----

----
## https://maven.apache.org/scm/maven-scm-plugin/
----

----
https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference
----


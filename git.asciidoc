= aucampia/notes/git


----
git clone <url> [<optional_destination>]

# check changes
git diff
git status

# Add file to commit
git add <file>

# Commit changes locally
git commit -m "message comes here ..."

# Send changes upstream
git push

# Fetch upstream changes
git pull
----

----
git remote rename origin github
git remote add origin ?newurl?
git remote rm github
git remote -v

git remote set-url origin https://github.com/aucampia/notes.git https://github.com/aucampia/notes.git

git config -l

git push -u origin --all
----

----
git filter-branch -f --env-filter "GIT_AUTHOR_NAME='Iwan Aucamp'; GIT_AUTHOR_EMAIL='aucampia@gmail.com'; GIT_COMMITTER_NAME='Iwan Aucamp'; GIT_COMMITTER_EMAIL='aucampia@gmail.com';" HEAD


git config user.email "aucampia@gmail.com"
git config user.name "Iwan Aucamp"

git config user.email "iwan.aucamp@concurrent.co.za"
git config user.name "Iwan Aucamp @ Concurrent Systems"

git pull origin master


git remote rm origin
git remote add origin ...
git remote set-url origin ...
----

----
* https://help.github.com/articles/create-a-repo
* http://git.or.cz/course/svn.html
* http://www.bioinf.uni-freiburg.de/~mmann/HowTo/automake.html#exampleProg
* http://www.openismus.com/documents/linux/building_libraries/building_libraries
* http://www.openismus.com/documents/linux/automake/automake
* https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet
* http://www.methods.co.nz/asciidoc/userguide.html
* http://powerman.name/doc/asciidoc
* http://git.or.cz/course/svn.html
----

----
find . -mindepth 1 -maxdepth 1 -type d | xargs -t -I{} git -C {} status
find . -mindepth 1 -maxdepth 1 -type d | xargs -t -I{} git -C {} pull
find . -mindepth 1 -maxdepth 1 -type d | xargs -t -I{} git -C {} push

find . -name .git -printf '%h\0' | xargs -0 -t -I{} git -C {} status
find . -name .git -printf '%h\0' | xargs -0 -t -I{} git -C {} push

ls -d ~/projects/{github,gitlab}*/aucampia/*/.git | sed 's,/\.git$,,g' | tr '\n' '\000' | xargs -0 -t -I{} git -C {} status
ls -d ~/projects/{github,gitlab}*/aucampia/*/.git | sed 's,/\.git$,,g' | tr '\n' '\000' | xargs -0 -t -I{} git -C {} pull
ls -d ~/projects/{github,gitlab}*/aucampia/*/.git | sed 's,/\.git$,,g' | tr '\n' '\000' | xargs -0 -t -I{} git -C {} remote -v

ls -d ~/projects/{github,gitlab}*/aucampia/*/.git | sed 's,/\.git$,,g' | tr '\n' '\000' | xargs -0 -n1 bash -c 'origin=$( git -C "${1}" remote -v | egrep "origin\\s.*(push)" | gawk "{ print \$2 }" | sed 's/\.git$//g' | sed -e "s/\([^@]\+\)@\([^:]\+\):\(.*\)/\1@aucampia.\2:\3.git/g" -e "s,https://\([^/]\+\)/\([^/]\+\)/\(.*\),git@aucampia.\1:\2/\3.git,g" ); echo git -C "${1}" remote set-url origin "${origin}"' /dev/null

ls -d ~/projects/gitlab*/concurrent*-{platform,pcc}/*/.git | sed 's,/\.git$,,g' | tr '\n' '\000' | xargs -0 -t -I{} git -C {} status
ls -d ~/projects/gitlab*/concurrent*-{platform,pcc}/*/.git | sed 's,/\.git$,,g' | tr '\n' '\000' | xargs -0 -t -I{} git -C {} pull
ls -d ~/projects/gitlab*/concurrent*-{platform,pcc}/*/.git | sed 's,/\.git$,,g' | tr '\n' '\000' | xargs -0 -t -I{} git -C {} remote -v

ls -d ~/projects/gitlab*/concurrent*-{platform,pcc}/*/.git | sed 's,/\.git$,,g' | tr '\n' '\000' | xargs -0 -n1 bash -c 'origin=$( git -C "${1}" remote -v | egrep "origin\\s.*(push)" | gawk "{ print \$2 }" | sed 's/\.git$//g' | sed -e "s/\([^@]\+\)@\([^:]\+\):\(.*\)/\1@concurrent.\2:\3.git/g" -e "s,https://\([^/]\+\)/\([^/]\+\)/\(.*\),git@concurrent.\1:\2/\3.git,g" ); echo git -C "${1}" remote set-url origin "${origin}"' /dev/null
----

----
git mergetool --tool=vimdiff
----

----
bfg --delete-files 'stuffs.asciidoc'
git push origin --force --all

git reflog expire --expire=now --all
git gc --aggressive --prune=now
----

----
git tag 1.0.0
git push origin 1.0.0
----

----
git checkout 
----

----
git tag -d 4.3.5
git push origin :refs/tags/4.3.5
----


----
git revert 137456d80099247aad1e10007ba3b9bad65f5241
----

----
git difftool --tool=vimdiff --no-prompt
----

----
<KevinMGranger> CustosLimen: if you want to keep all of your configuration and remotes and everything, you can find the SHA of the initial commit and do a git reset --soft SHA && git commit --amend
----
